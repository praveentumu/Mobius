//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18034.
// 
#pragma warning disable 1591

namespace C32Utility
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ValidationWebServiceSOAP11Binding", Namespace = "http://validation.hitsp.nist.gov")]
    public partial class ValidationWebService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback getAvailableValidationsOperationCompleted;

        private System.Threading.SendOrPostCallback validateDocumentOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public ValidationWebService(string endPoint)
        {
            //this.Url = global::ValidationWebService.Properties.Settings.Default.ValidationWebService_gov_nist_hit_testing_ValidationWebService;
            //Following code has been updated to use the parameter as the endpoint, where url parameter is being assigned
            this.Url = endPoint;

            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event getAvailableValidationsCompletedEventHandler getAvailableValidationsCompleted;

        /// <remarks/>
        public event validateDocumentCompletedEventHandler validateDocumentCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getAvailableValidations", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getAvailableValidationsResponse", Namespace = "http://validation.hitsp.nist.gov")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("return")]
        public WSSpecification[] getAvailableValidations()
        {
            object[] results = this.Invoke("getAvailableValidations", new object[0]);
            return ((WSSpecification[])(results[0]));
        }

        /// <remarks/>
        public void getAvailableValidationsAsync()
        {
            this.getAvailableValidationsAsync(null);
        }

        /// <remarks/>
        public void getAvailableValidationsAsync(object userState)
        {
            if ((this.getAvailableValidationsOperationCompleted == null))
            {
                this.getAvailableValidationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAvailableValidationsOperationCompleted);
            }
            this.InvokeAsync("getAvailableValidations", new object[0], this.getAvailableValidationsOperationCompleted, userState);
        }

        private void OngetAvailableValidationsOperationCompleted(object arg)
        {
            if ((this.getAvailableValidationsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAvailableValidationsCompleted(this, new getAvailableValidationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:validateDocument", RequestNamespace = "http://validation.hitsp.nist.gov", ResponseNamespace = "http://validation.hitsp.nist.gov", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable = true)]
        public WSValidationResults validateDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string specificationId, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string document)
        {
            object[] results = this.Invoke("validateDocument", new object[] {
                        specificationId,
                        document});
            return ((WSValidationResults)(results[0]));
        }

        /// <remarks/>
        public void validateDocumentAsync(string specificationId, string document)
        {
            this.validateDocumentAsync(specificationId, document, null);
        }

        /// <remarks/>
        public void validateDocumentAsync(string specificationId, string document, object userState)
        {
            if ((this.validateDocumentOperationCompleted == null))
            {
                this.validateDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateDocumentOperationCompleted);
            }
            this.InvokeAsync("validateDocument", new object[] {
                        specificationId,
                        document}, this.validateDocumentOperationCompleted, userState);
        }

        private void OnvalidateDocumentOperationCompleted(object arg)
        {
            if ((this.validateDocumentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateDocumentCompleted(this, new validateDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://validation.hitsp.nist.gov/xsd")]
    public partial class WSSpecification
    {

        private string descriptionField;

        private string nameField;

        private string specificationIdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string specificationId
        {
            get
            {
                return this.specificationIdField;
            }
            set
            {
                this.specificationIdField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://validation.hitsp.nist.gov/xsd")]
    public partial class WSIndividualValidationResult
    {

        private string contextField;

        private string messageField;

        private string severityField;

        private string specificationField;

        private string testField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string context
        {
            get
            {
                return this.contextField;
            }
            set
            {
                this.contextField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string severity
        {
            get
            {
                return this.severityField;
            }
            set
            {
                this.severityField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string specification
        {
            get
            {
                return this.specificationField;
            }
            set
            {
                this.specificationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string test
        {
            get
            {
                return this.testField;
            }
            set
            {
                this.testField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://validation.hitsp.nist.gov/xsd")]
    public partial class WSValidationResults
    {

        private WSIndividualValidationResult[] issueField;

        private string validationDateField;

        private bool validationTestField;

        private bool validationTestFieldSpecified;

        private string validationTimeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("issue", IsNullable = true)]
        public WSIndividualValidationResult[] issue
        {
            get
            {
                return this.issueField;
            }
            set
            {
                this.issueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string validationDate
        {
            get
            {
                return this.validationDateField;
            }
            set
            {
                this.validationDateField = value;
            }
        }

        /// <remarks/>
        public bool validationTest
        {
            get
            {
                return this.validationTestField;
            }
            set
            {
                this.validationTestField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool validationTestSpecified
        {
            get
            {
                return this.validationTestFieldSpecified;
            }
            set
            {
                this.validationTestFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string validationTime
        {
            get
            {
                return this.validationTimeField;
            }
            set
            {
                this.validationTimeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getAvailableValidationsCompletedEventHandler(object sender, getAvailableValidationsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAvailableValidationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getAvailableValidationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public WSSpecification[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((WSSpecification[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void validateDocumentCompletedEventHandler(object sender, validateDocumentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal validateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public WSValidationResults Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((WSValidationResults)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591