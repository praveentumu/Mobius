//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1022
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="urn:MHISE", ConfigurationName="IMobius")]
public interface IMobius
{
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobius/AddProvider", ReplyAction="urn:MHISE/IMobius/AddProviderResponse")]
    MobiusServiceLibrary.AddProviderResponse AddProvider(MobiusServiceLibrary.AddProviderRequest Provider);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobius/AddPatient", ReplyAction="urn:MHISE/IMobius/AddPatientResponse")]
    MobiusServiceLibrary.AddPatientResponse AddPatient(MobiusServiceLibrary.AddPatientRequest registerPatientRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobius/GetMasterData", ReplyAction="urn:MHISE/IMobius/GetMasterDataResponse")]
    MobiusServiceLibrary.GetMasterDataResponse GetMasterData(MobiusServiceLibrary.GetMasterDataRequest getMasterDataRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobius/GetLocalityByZipCode", ReplyAction="urn:MHISE/IMobius/GetLocalityByZipCodeResponse")]
    MobiusServiceLibrary.GetLocalityByZipCodeResponse GetLocalityByZipCode(string zipCode);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobius/AuthenticateUser", ReplyAction="urn:MHISE/IMobius/AuthenticateUserResponse")]
    MobiusServiceLibrary.AuthenticateUserResponse AuthenticateUser(MobiusServiceLibrary.AuthenticateUserRequest authenticateUserRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobius/ForgotPassword", ReplyAction="urn:MHISE/IMobius/ForgotPasswordResponse")]
    MobiusServiceLibrary.ForgotPasswordResponse ForgotPassword(MobiusServiceLibrary.ForgotPasswordRequest forgotPasswordRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobius/GetApplicationVersion", ReplyAction="urn:MHISE/IMobius/GetApplicationVersionResponse")]
    string GetApplicationVersion();
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobius/GetPFXCertificate", ReplyAction="urn:MHISE/IMobius/GetPFXCertificateResponse")]
    MobiusServiceLibrary.GetPFXCertificateResponse GetPFXCertificate(MobiusServiceLibrary.GetPFXCertificateRequest getPFXCertificateRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobius/ActivateUser", ReplyAction="urn:MHISE/IMobius/ActivateUserResponse")]
    MobiusServiceLibrary.ActivateUserResponse ActivateUser(MobiusServiceLibrary.ActivateUserRequest activateUserRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobius/GetCSRDetails", ReplyAction="urn:MHISE/IMobius/GetCSRDetailsResponse")]
    MobiusServiceLibrary.GetCSRResponse GetCSRDetails(MobiusServiceLibrary.GetCSRRequest getCSRRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobius/ValidateDocument", ReplyAction="urn:MHISE/IMobius/ValidateDocumentResponse")]
    MobiusServiceLibrary.ValidateDocumentResponse ValidateDocument(MobiusServiceLibrary.ValidateDocumentRequest validateDocumentRequest);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IMobiusChannel : IMobius, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MobiusClient : System.ServiceModel.ClientBase<IMobius>, IMobius
{
    
    public MobiusClient()
    {
    }
    
    public MobiusClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public MobiusClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MobiusClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MobiusClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public MobiusServiceLibrary.AddProviderResponse AddProvider(MobiusServiceLibrary.AddProviderRequest Provider)
    {
        return base.Channel.AddProvider(Provider);
    }
    
    public MobiusServiceLibrary.AddPatientResponse AddPatient(MobiusServiceLibrary.AddPatientRequest registerPatientRequest)
    {
        return base.Channel.AddPatient(registerPatientRequest);
    }
    
    public MobiusServiceLibrary.GetMasterDataResponse GetMasterData(MobiusServiceLibrary.GetMasterDataRequest getMasterDataRequest)
    {
        return base.Channel.GetMasterData(getMasterDataRequest);
    }
    
    public MobiusServiceLibrary.GetLocalityByZipCodeResponse GetLocalityByZipCode(string zipCode)
    {
        return base.Channel.GetLocalityByZipCode(zipCode);
    }
    
    public MobiusServiceLibrary.AuthenticateUserResponse AuthenticateUser(MobiusServiceLibrary.AuthenticateUserRequest authenticateUserRequest)
    {
        return base.Channel.AuthenticateUser(authenticateUserRequest);
    }
    
    public MobiusServiceLibrary.ForgotPasswordResponse ForgotPassword(MobiusServiceLibrary.ForgotPasswordRequest forgotPasswordRequest)
    {
        return base.Channel.ForgotPassword(forgotPasswordRequest);
    }
    
    public string GetApplicationVersion()
    {
        return base.Channel.GetApplicationVersion();
    }
    
    public MobiusServiceLibrary.GetPFXCertificateResponse GetPFXCertificate(MobiusServiceLibrary.GetPFXCertificateRequest getPFXCertificateRequest)
    {
        return base.Channel.GetPFXCertificate(getPFXCertificateRequest);
    }
    
    public MobiusServiceLibrary.ActivateUserResponse ActivateUser(MobiusServiceLibrary.ActivateUserRequest activateUserRequest)
    {
        return base.Channel.ActivateUser(activateUserRequest);
    }
    
    public MobiusServiceLibrary.GetCSRResponse GetCSRDetails(MobiusServiceLibrary.GetCSRRequest getCSRRequest)
    {
        return base.Channel.GetCSRDetails(getCSRRequest);
    }
    
    public MobiusServiceLibrary.ValidateDocumentResponse ValidateDocument(MobiusServiceLibrary.ValidateDocumentRequest validateDocumentRequest)
    {
        return base.Channel.ValidateDocument(validateDocumentRequest);
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="urn:MHISE", ConfigurationName="IMobiusSecured")]
public interface IMobiusSecured
{
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/SearchPatient", ReplyAction="urn:MHISE/IMobiusSecured/SearchPatientResponse")]
    MobiusServiceLibrary.SearchPatientResponse SearchPatient(MobiusServiceLibrary.SearchPatientRequest searchPatientRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/GetNhinCommunity", ReplyAction="urn:MHISE/IMobiusSecured/GetNhinCommunityResponse")]
    MobiusServiceLibrary.GetNhinCommunityResponse GetNhinCommunity();
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/GetDocumentMetadata", ReplyAction="urn:MHISE/IMobiusSecured/GetDocumentMetadataResponse")]
    MobiusServiceLibrary.GetDocumentMetadataResponse GetDocumentMetadata(MobiusServiceLibrary.GetDocumentMetadataRequest getDocumentMetadataRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/GetDocument", ReplyAction="urn:MHISE/IMobiusSecured/GetDocumentResponse")]
    MobiusServiceLibrary.GetDocumentResponse GetDocument(MobiusServiceLibrary.GetDocumentRequest getDocumentRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/UploadDocument", ReplyAction="urn:MHISE/IMobiusSecured/UploadDocumentResponse")]
    MobiusServiceLibrary.UploadDocumentResponse UploadDocument(MobiusServiceLibrary.UploadDocumentRequest uploadDocumentRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/ShareDocument", ReplyAction="urn:MHISE/IMobiusSecured/ShareDocumentResponse")]
    MobiusServiceLibrary.ShareDocumentResponse ShareDocument(MobiusServiceLibrary.ShareDocumentRequest shareDocumentRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/GetDocumentMetaDataByDocumentId", ReplyAction="urn:MHISE/IMobiusSecured/GetDocumentMetaDataByDocumentIdResponse")]
    MobiusServiceLibrary.GetDocumentMetadataResponse GetDocumentMetaDataByDocumentId(MobiusServiceLibrary.GetDocumentMetadataDocumentIDRequest getDocumentMetadataDocumentIDRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/UpgradeUser", ReplyAction="urn:MHISE/IMobiusSecured/UpgradeUserResponse")]
    MobiusServiceLibrary.UpgradeUserResponse UpgradeUser(MobiusServiceLibrary.UpgradeUserRequest upgradeUserRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/CreateReferral", ReplyAction="urn:MHISE/IMobiusSecured/CreateReferralResponse")]
    MobiusServiceLibrary.PatientReferralResponse CreateReferral(MobiusServiceLibrary.CreateReferralRequest createReferralRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/AcknowledgeReferral", ReplyAction="urn:MHISE/IMobiusSecured/AcknowledgeReferralResponse")]
    MobiusServiceLibrary.PatientReferralResponse AcknowledgeReferral(MobiusServiceLibrary.AcceptReferralRequest acceptReferredRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/CompletePatientReferral", ReplyAction="urn:MHISE/IMobiusSecured/CompletePatientReferralResponse")]
    MobiusServiceLibrary.PatientReferralResponse CompletePatientReferral(MobiusServiceLibrary.PatientReferralCompletedRequest referralCompletedRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/GetPatientReferralDetails", ReplyAction="urn:MHISE/IMobiusSecured/GetPatientReferralDetailsResponse")]
    MobiusServiceLibrary.GetPatientReferralResponse GetPatientReferralDetails(MobiusServiceLibrary.GetPatientReferralRequest getPatientReferralRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/GetPatientDetails", ReplyAction="urn:MHISE/IMobiusSecured/GetPatientDetailsResponse")]
    MobiusServiceLibrary.GetPatientDetailsResponse GetPatientDetails(MobiusServiceLibrary.GetPatientDetailsRequest getPatientDetailsRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/UpdatePatient", ReplyAction="urn:MHISE/IMobiusSecured/UpdatePatientResponse")]
    MobiusServiceLibrary.UpdatePatientResponse UpdatePatient(MobiusServiceLibrary.UpdatePatientRequest updatePatientRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/GetUserInformation", ReplyAction="urn:MHISE/IMobiusSecured/GetUserInformationResponse")]
    MobiusServiceLibrary.UserInformationResponse GetUserInformation();
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/GetC32Sections", ReplyAction="urn:MHISE/IMobiusSecured/GetC32SectionsResponse")]
    MobiusServiceLibrary.GetC32SectionsResponse GetC32Sections();
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/GetPatientConsent", ReplyAction="urn:MHISE/IMobiusSecured/GetPatientConsentResponse")]
    MobiusServiceLibrary.GetPatientConsentResponse GetPatientConsent(MobiusServiceLibrary.GetPatientConsentRequest GetPatientConsentRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/GetPatientConsentByConsentId", ReplyAction="urn:MHISE/IMobiusSecured/GetPatientConsentByConsentIdResponse")]
    MobiusServiceLibrary.GetPatientConsentResponse GetPatientConsentByConsentId(MobiusServiceLibrary.GetPatientConsentRequest GetPatientConsentRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/UpdatePatientConsentPolicy", ReplyAction="urn:MHISE/IMobiusSecured/UpdatePatientConsentPolicyResponse")]
    MobiusServiceLibrary.UpdatePatientConsentPolicyResponse UpdatePatientConsentPolicy(MobiusServiceLibrary.UpdatePatientConsentPolicyRequest updatePatientConsentPolicyRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/DeletePatientConsentPolicy", ReplyAction="urn:MHISE/IMobiusSecured/DeletePatientConsentPolicyResponse")]
    MobiusServiceLibrary.DeletePatientConsentPolicyResponse DeletePatientConsentPolicy(MobiusServiceLibrary.DeletePatientConsentPolicyRequest updatePatientConsentPolicyRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/UpdateOptInStatus", ReplyAction="urn:MHISE/IMobiusSecured/UpdateOptInStatusResponse")]
    MobiusServiceLibrary.UpdateOptInStatusResponse UpdateOptInStatus(MobiusServiceLibrary.UpdateOptInStatusRequest updateOptInStatusRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/ChangePassword", ReplyAction="urn:MHISE/IMobiusSecured/ChangePasswordResponse")]
    MobiusServiceLibrary.ChangePasswordResponse ChangePassword(MobiusServiceLibrary.ChangePasswordRequest changePasswordRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/GetPatientInformationByDocumentID", ReplyAction="urn:MHISE/IMobiusSecured/GetPatientInformationByDocumentIDResponse")]
    MobiusServiceLibrary.GetPatientDetailsResponse GetPatientInformationByDocumentID(MobiusServiceLibrary.GetPatientDetailsbyDocumentIdRequest getPatientDetailsbyDocumentIdrequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/AddPFXCertificate", ReplyAction="urn:MHISE/IMobiusSecured/AddPFXCertificateResponse")]
    MobiusServiceLibrary.AddPFXCertificateResponse AddPFXCertificate(MobiusServiceLibrary.AddPFXCertificateRequest addPFXCertificateRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/GetPHISource", ReplyAction="urn:MHISE/IMobiusSecured/GetPHISourceResponse")]
    MobiusServiceLibrary.PHISourceResponse GetPHISource(MobiusServiceLibrary.PHISourceRequest patientCorrelationRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/GetAllEmergencyAudit", ReplyAction="urn:MHISE/IMobiusSecured/GetAllEmergencyAuditResponse")]
    MobiusServiceLibrary.GetEmergencyAuditResponse GetAllEmergencyAudit(MobiusServiceLibrary.GetEmergencyAuditRequest getEmergencyAuditRequest);
    
    [System.ServiceModel.OperationContractAttribute(Action="urn:MHISE/IMobiusSecured/GetEmergencyDetailById", ReplyAction="urn:MHISE/IMobiusSecured/GetEmergencyDetailByIdResponse")]
    MobiusServiceLibrary.GetEmergencyAuditResponse GetEmergencyDetailById(MobiusServiceLibrary.GetEmergencyAuditRequest getEmergencyAuditRequest);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IMobiusSecuredChannel : IMobiusSecured, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MobiusSecuredClient : System.ServiceModel.ClientBase<IMobiusSecured>, IMobiusSecured
{
    
    public MobiusSecuredClient()
    {
    }
    
    public MobiusSecuredClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public MobiusSecuredClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MobiusSecuredClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MobiusSecuredClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public MobiusServiceLibrary.SearchPatientResponse SearchPatient(MobiusServiceLibrary.SearchPatientRequest searchPatientRequest)
    {
        return base.Channel.SearchPatient(searchPatientRequest);
    }
    
    public MobiusServiceLibrary.GetNhinCommunityResponse GetNhinCommunity()
    {
        return base.Channel.GetNhinCommunity();
    }
    
    public MobiusServiceLibrary.GetDocumentMetadataResponse GetDocumentMetadata(MobiusServiceLibrary.GetDocumentMetadataRequest getDocumentMetadataRequest)
    {
        return base.Channel.GetDocumentMetadata(getDocumentMetadataRequest);
    }
    
    public MobiusServiceLibrary.GetDocumentResponse GetDocument(MobiusServiceLibrary.GetDocumentRequest getDocumentRequest)
    {
        return base.Channel.GetDocument(getDocumentRequest);
    }
    
    public MobiusServiceLibrary.UploadDocumentResponse UploadDocument(MobiusServiceLibrary.UploadDocumentRequest uploadDocumentRequest)
    {
        return base.Channel.UploadDocument(uploadDocumentRequest);
    }
    
    public MobiusServiceLibrary.ShareDocumentResponse ShareDocument(MobiusServiceLibrary.ShareDocumentRequest shareDocumentRequest)
    {
        return base.Channel.ShareDocument(shareDocumentRequest);
    }
    
    public MobiusServiceLibrary.GetDocumentMetadataResponse GetDocumentMetaDataByDocumentId(MobiusServiceLibrary.GetDocumentMetadataDocumentIDRequest getDocumentMetadataDocumentIDRequest)
    {
        return base.Channel.GetDocumentMetaDataByDocumentId(getDocumentMetadataDocumentIDRequest);
    }
    
    public MobiusServiceLibrary.UpgradeUserResponse UpgradeUser(MobiusServiceLibrary.UpgradeUserRequest upgradeUserRequest)
    {
        return base.Channel.UpgradeUser(upgradeUserRequest);
    }
    
    public MobiusServiceLibrary.PatientReferralResponse CreateReferral(MobiusServiceLibrary.CreateReferralRequest createReferralRequest)
    {
        return base.Channel.CreateReferral(createReferralRequest);
    }
    
    public MobiusServiceLibrary.PatientReferralResponse AcknowledgeReferral(MobiusServiceLibrary.AcceptReferralRequest acceptReferredRequest)
    {
        return base.Channel.AcknowledgeReferral(acceptReferredRequest);
    }
    
    public MobiusServiceLibrary.PatientReferralResponse CompletePatientReferral(MobiusServiceLibrary.PatientReferralCompletedRequest referralCompletedRequest)
    {
        return base.Channel.CompletePatientReferral(referralCompletedRequest);
    }
    
    public MobiusServiceLibrary.GetPatientReferralResponse GetPatientReferralDetails(MobiusServiceLibrary.GetPatientReferralRequest getPatientReferralRequest)
    {
        return base.Channel.GetPatientReferralDetails(getPatientReferralRequest);
    }
    
    public MobiusServiceLibrary.GetPatientDetailsResponse GetPatientDetails(MobiusServiceLibrary.GetPatientDetailsRequest getPatientDetailsRequest)
    {
        return base.Channel.GetPatientDetails(getPatientDetailsRequest);
    }
    
    public MobiusServiceLibrary.UpdatePatientResponse UpdatePatient(MobiusServiceLibrary.UpdatePatientRequest updatePatientRequest)
    {
        return base.Channel.UpdatePatient(updatePatientRequest);
    }
    
    public MobiusServiceLibrary.UserInformationResponse GetUserInformation()
    {
        return base.Channel.GetUserInformation();
    }
    
    public MobiusServiceLibrary.GetC32SectionsResponse GetC32Sections()
    {
        return base.Channel.GetC32Sections();
    }
    
    public MobiusServiceLibrary.GetPatientConsentResponse GetPatientConsent(MobiusServiceLibrary.GetPatientConsentRequest GetPatientConsentRequest)
    {
        return base.Channel.GetPatientConsent(GetPatientConsentRequest);
    }
    
    public MobiusServiceLibrary.GetPatientConsentResponse GetPatientConsentByConsentId(MobiusServiceLibrary.GetPatientConsentRequest GetPatientConsentRequest)
    {
        return base.Channel.GetPatientConsentByConsentId(GetPatientConsentRequest);
    }
    
    public MobiusServiceLibrary.UpdatePatientConsentPolicyResponse UpdatePatientConsentPolicy(MobiusServiceLibrary.UpdatePatientConsentPolicyRequest updatePatientConsentPolicyRequest)
    {
        return base.Channel.UpdatePatientConsentPolicy(updatePatientConsentPolicyRequest);
    }
    
    public MobiusServiceLibrary.DeletePatientConsentPolicyResponse DeletePatientConsentPolicy(MobiusServiceLibrary.DeletePatientConsentPolicyRequest updatePatientConsentPolicyRequest)
    {
        return base.Channel.DeletePatientConsentPolicy(updatePatientConsentPolicyRequest);
    }
    
    public MobiusServiceLibrary.UpdateOptInStatusResponse UpdateOptInStatus(MobiusServiceLibrary.UpdateOptInStatusRequest updateOptInStatusRequest)
    {
        return base.Channel.UpdateOptInStatus(updateOptInStatusRequest);
    }
    
    public MobiusServiceLibrary.ChangePasswordResponse ChangePassword(MobiusServiceLibrary.ChangePasswordRequest changePasswordRequest)
    {
        return base.Channel.ChangePassword(changePasswordRequest);
    }
    
    public MobiusServiceLibrary.GetPatientDetailsResponse GetPatientInformationByDocumentID(MobiusServiceLibrary.GetPatientDetailsbyDocumentIdRequest getPatientDetailsbyDocumentIdrequest)
    {
        return base.Channel.GetPatientInformationByDocumentID(getPatientDetailsbyDocumentIdrequest);
    }
    
    public MobiusServiceLibrary.AddPFXCertificateResponse AddPFXCertificate(MobiusServiceLibrary.AddPFXCertificateRequest addPFXCertificateRequest)
    {
        return base.Channel.AddPFXCertificate(addPFXCertificateRequest);
    }
    
    public MobiusServiceLibrary.PHISourceResponse GetPHISource(MobiusServiceLibrary.PHISourceRequest patientCorrelationRequest)
    {
        return base.Channel.GetPHISource(patientCorrelationRequest);
    }
    
    public MobiusServiceLibrary.GetEmergencyAuditResponse GetAllEmergencyAudit(MobiusServiceLibrary.GetEmergencyAuditRequest getEmergencyAuditRequest)
    {
        return base.Channel.GetAllEmergencyAudit(getEmergencyAuditRequest);
    }
    
    public MobiusServiceLibrary.GetEmergencyAuditResponse GetEmergencyDetailById(MobiusServiceLibrary.GetEmergencyAuditRequest getEmergencyAuditRequest)
    {
        return base.Channel.GetEmergencyDetailById(getEmergencyAuditRequest);
    }
}
